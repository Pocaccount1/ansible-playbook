- name: launch an ec2 instance for kubernetes master node
  hosts: localhost
  become: false
  vars:
    keypair: kubernetes-cluster-snap
    instance_type: t2.micro
    image: ami-0eea504f45ef7a8f7
    vpc_subnet_id: subnet-7c8d2b17
    security_group_id: sg-03963e97030b5add9
    region: us-east-2
    output_dir: ./outputs

  tasks:
    - name: launch ec2 instance
      amazon.aws.ec2:
        keypair: "{{ keypair }}"
        group_id: "{{ security_group_id }}"
        instance_type: "{{ instance_type }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        image: "{{ image }}"
        assign_public_ip: yes
        wait: yes
        wait_timeout: 500
        count: 1
        instance_tags:
          name: master
          env: test
        region: "{{ region }}"
      register: master_node_output

    - name: output of master ec2 instance
      local_action:
        module: copy
        content: "{{ master_node_output }}"
        dest: "{{ output_dir }}/master_output" 
  
- name: launch ec2 instances for kubernetes worker nodes
  hosts: localhost
  become: false
  vars:
    keypair: kubernetes-cluster-snap
    instance_type: t2.micro
    image: ami-0eea504f45ef7a8f7
    vpc_subnet_id: subnet-7c8d2b17
    security_group_id: sg-03963e97030b5add9
    region: us-east-2
    output_dir: ./outputs

  tasks:
    - name: launch ec2 instance
      amazon.aws.ec2:
        keypair: "{{ keypair }}"
        group_id: "{{ security_group_id }}"
        instance_type: "{{ instance_type }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        image: "{{ image }}"
        assign_public_ip: yes
        wait: yes
        wait_timeout: 500
        count: 3
        instance_tags:
          name: worker
          env: test
        region: "{{ region }}"
      register: worker_node_output

    - name: output of slave ec2 instance
      local_action:
        module: copy
        content: "{{ worker_node_output }}"
        dest: "{{ output_dir }}/worker_output" 
